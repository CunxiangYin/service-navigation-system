version: '3.8'

services:
  backend:
    build: .
    container_name: service-nav-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/service_nav
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here-change-in-production
      - CORS_ORIGINS=["http://localhost:3000","http://localhost:5173"]
    volumes:
      - ./data:/app/data
    depends_on:
      - db
      - redis
    networks:
      - service-nav-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: service-nav-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=service_nav
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - service-nav-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: service-nav-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - service-nav-network
    restart: unless-stopped

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: service-nav-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - service-nav-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  service-nav-network:
    driver: bridge